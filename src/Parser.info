-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.5 from src/Parser.y
-----------------------------------------------------------------------------

state 105 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Program                            (0)
	Program -> DeclList                                (1)
	DeclList -> Decl                                   (2)
	DeclList -> Decl ";" DeclList                      (3)
	Decl -> ident Params "=" Expr                      (4)
	Params ->                                          (5)
	Params -> ident Params                             (6)
	Expr -> Lambda                                     (7)
	Expr -> IfExpr                                     (8)
	Expr -> CaseExpr                                   (9)
	Expr -> LetExpr                                    (10)
	Expr -> ExprOr                                     (11)
	Lambda -> "\\" LamParams "->" Expr                 (12)
	LamParams -> Params                                (13)
	LamParams -> "(" IdentList ")"                     (14)
	IdentList -> ident                                 (15)
	IdentList -> ident "," IdentList                   (16)
	IfExpr -> "if" Expr "then" Expr "else" Expr        (17)
	CaseExpr -> "case" Expr "of" Alts                  (18)
	Alts -> Alt                                        (19)
	Alts -> Alt ";" Alts                               (20)
	Alt -> Pattern "->" Expr                           (21)
	LetExpr -> "let" DeclList "in" Expr                (22)
	ExprOr -> ExprAnd OrRest                           (23)
	OrRest ->                                          (24)
	OrRest -> "||" ExprAnd OrRest                      (25)
	ExprAnd -> ExprEq AndRest                          (26)
	AndRest ->                                         (27)
	AndRest -> "&&" ExprEq AndRest                     (28)
	ExprEq -> ExprRel EqRest                           (29)
	EqRest ->                                          (30)
	EqRest -> EqOp ExprRel EqRest                      (31)
	EqOp -> "=="                                       (32)
	EqOp -> "/="                                       (33)
	ExprRel -> ExprAdd RelRest                         (34)
	RelRest ->                                         (35)
	RelRest -> RelOp ExprAdd RelRest                   (36)
	RelOp -> "<"                                       (37)
	RelOp -> "<="                                      (38)
	RelOp -> ">"                                       (39)
	RelOp -> ">="                                      (40)
	ExprAdd -> ExprMul AddRest                         (41)
	AddRest ->                                         (42)
	AddRest -> AddOp ExprMul AddRest                   (43)
	AddOp -> "+"                                       (44)
	AddOp -> "-"                                       (45)
	ExprMul -> ExprUnary MulRest                       (46)
	MulRest ->                                         (47)
	MulRest -> MulOp ExprUnary MulRest                 (48)
	MulOp -> "*"                                       (49)
	MulOp -> "/"                                       (50)
	MulOp -> "%"                                       (51)
	ExprUnary -> "not" ExprUnary                       (52)
	ExprUnary -> "-" ExprUnary                         (53)
	ExprUnary -> ExprApp                               (54)
	ExprApp -> Atom AppTail                            (55)
	AppTail ->                                         (56)
	AppTail -> Atom AppTail                            (57)
	Atom -> Literal                                    (58)
	Atom -> ident                                      (59)
	Atom -> "(" Expr ")"                               (60)
	Atom -> List                                       (61)
	Atom -> Tuple                                      (62)
	Literal -> int                                     (63)
	Literal -> float                                   (64)
	Literal -> char                                    (65)
	Literal -> string                                  (66)
	Literal -> "True"                                  (67)
	Literal -> "False"                                 (68)
	List -> "[" ExprListOpt "]"                        (69)
	ExprListOpt ->                                     (70)
	ExprListOpt -> ExprList                            (71)
	ExprList -> Expr ExprListTail                      (72)
	ExprListTail ->                                    (73)
	ExprListTail -> "," Expr ExprListTail              (74)
	Tuple -> "(" Expr "," Expr TupleTail ")"           (75)
	TupleTail ->                                       (76)
	TupleTail -> "," Expr TupleTail                    (77)
	Pattern -> "_"                                     (78)
	Pattern -> ident                                   (79)
	Pattern -> Literal                                 (80)
	Pattern -> ListPattern                             (81)
	Pattern -> TuplePattern                            (82)
	ListPattern -> "[" PatternListOpt "]"              (83)
	PatternListOpt ->                                  (84)
	PatternListOpt -> PatternList                      (85)
	PatternList -> Pattern PatternListTail             (86)
	PatternListTail ->                                 (87)
	PatternListTail -> "," Pattern PatternListTail     (88)
	TuplePattern -> "(" Pattern PatternTupleTail ")"   (89)
	PatternTupleTail ->                                (90)
	PatternTupleTail -> "," Pattern PatternTupleTail   (91)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	";"            { (_, TokenSemi) }
	"let"          { (_, TokenLet) }
	"in"           { (_, TokenIn) }
	"if"           { (_, TokenIf) }
	"then"         { (_, TokenThen) }
	"else"         { (_, TokenElse) }
	"case"         { (_, TokenCase) }
	"of"           { (_, TokenOf) }
	"not"          { (_, TokenNot) }
	"->"           { (_, TokenArrow) }
	"\\"           { (_, TokenBackslash) }
	"="            { (_, TokenEquals) }
	"_"            { (_, TokenUnderscore) }
	"("            { (_, TokenLParen) }
	")"            { (_, TokenRParen) }
	"["            { (_, TokenLBracket) }
	"]"            { (_, TokenRBracket) }
	","            { (_, TokenComma) }
	"+"            { (_, TokenPlus) }
	"-"            { (_, TokenMinus) }
	"*"            { (_, TokenTimes) }
	"/"            { (_, TokenDiv) }
	"%"            { (_, TokenMod) }
	"=="           { (_, TokenEq) }
	"/="           { (_, TokenNeq) }
	"<"            { (_, TokenLt) }
	"<="           { (_, TokenLe) }
	">"            { (_, TokenGt) }
	">="           { (_, TokenGe) }
	"&&"           { (_, TokenAnd) }
	"||"           { (_, TokenOr) }
	int            { (_, TokenInt $$) }
	float          { (_, TokenFloat $$) }
	char           { (_, TokenChar $$) }
	string         { (_, TokenString $$) }
	"True"         { (_, TokenBool True) }
	"False"        { (_, TokenBool False) }
	ident          { (_, TokenIdent $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Program         rule  1
	DeclList        rules 2, 3
	Decl            rule  4
	Params          rules 5, 6
	Expr            rules 7, 8, 9, 10, 11
	Lambda          rule  12
	LamParams       rules 13, 14
	IdentList       rules 15, 16
	IfExpr          rule  17
	CaseExpr        rule  18
	Alts            rules 19, 20
	Alt             rule  21
	LetExpr         rule  22
	ExprOr          rule  23
	OrRest          rules 24, 25
	ExprAnd         rule  26
	AndRest         rules 27, 28
	ExprEq          rule  29
	EqRest          rules 30, 31
	EqOp            rules 32, 33
	ExprRel         rule  34
	RelRest         rules 35, 36
	RelOp           rules 37, 38, 39, 40
	ExprAdd         rule  41
	AddRest         rules 42, 43
	AddOp           rules 44, 45
	ExprMul         rule  46
	MulRest         rules 47, 48
	MulOp           rules 49, 50, 51
	ExprUnary       rules 52, 53, 54
	ExprApp         rule  55
	AppTail         rules 56, 57
	Atom            rules 58, 59, 60, 61, 62
	Literal         rules 63, 64, 65, 66, 67, 68
	List            rule  69
	ExprListOpt     rules 70, 71
	ExprList        rule  72
	ExprListTail    rules 73, 74
	Tuple           rule  75
	TupleTail       rules 76, 77
	Pattern         rules 78, 79, 80, 81, 82
	ListPattern     rule  83
	PatternListOpt  rules 84, 85
	PatternList     rule  86
	PatternListTail rules 87, 88
	TuplePattern    rule  89
	PatternTupleTail rules 90, 91

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parse -> . Program                           (rule 0)

	ident          shift, and enter state 4

	Program        goto state 5
	DeclList       goto state 2
	Decl           goto state 3

State 1

	Program -> . DeclList                               (rule 1)

	ident          shift, and enter state 4

	DeclList       goto state 2
	Decl           goto state 3

State 2

	Program -> DeclList .                               (rule 1)

	%eof           reduce using rule 1


State 3

	DeclList -> Decl .                                  (rule 2)
	DeclList -> Decl . ";" DeclList                     (rule 3)

	";"            shift, and enter state 8
	"in"           reduce using rule 2
	%eof           reduce using rule 2


State 4

	Decl -> ident . Params "=" Expr                     (rule 4)

	"="            reduce using rule 5
	ident          shift, and enter state 7

	Params         goto state 6

State 5

	%start_parse -> Program .                           (rule 0)

	%eof           accept


State 6

	Decl -> ident Params . "=" Expr                     (rule 4)

	"="            shift, and enter state 11


State 7

	Params -> ident . Params                            (rule 6)

	"->"           reduce using rule 5
	"="            reduce using rule 5
	ident          shift, and enter state 7

	Params         goto state 10

State 8

	DeclList -> Decl ";" . DeclList                     (rule 3)

	ident          shift, and enter state 4

	DeclList       goto state 9
	Decl           goto state 3

State 9

	DeclList -> Decl ";" DeclList .                     (rule 3)

	"in"           reduce using rule 3
	%eof           reduce using rule 3


State 10

	Params -> ident Params .                            (rule 6)

	"->"           reduce using rule 6
	"="            reduce using rule 6


State 11

	Decl -> ident Params "=" . Expr                     (rule 4)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 12
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 12

	Decl -> ident Params "=" Expr .                     (rule 4)

	";"            reduce using rule 4
	"in"           reduce using rule 4
	%eof           reduce using rule 4


State 13

	Expr -> Lambda .                                    (rule 7)

	";"            reduce using rule 7
	"in"           reduce using rule 7
	"then"         reduce using rule 7
	"else"         reduce using rule 7
	"of"           reduce using rule 7
	")"            reduce using rule 7
	"]"            reduce using rule 7
	","            reduce using rule 7
	%eof           reduce using rule 7


State 14

	Expr -> IfExpr .                                    (rule 8)

	";"            reduce using rule 8
	"in"           reduce using rule 8
	"then"         reduce using rule 8
	"else"         reduce using rule 8
	"of"           reduce using rule 8
	")"            reduce using rule 8
	"]"            reduce using rule 8
	","            reduce using rule 8
	%eof           reduce using rule 8


State 15

	Expr -> CaseExpr .                                  (rule 9)

	";"            reduce using rule 9
	"in"           reduce using rule 9
	"then"         reduce using rule 9
	"else"         reduce using rule 9
	"of"           reduce using rule 9
	")"            reduce using rule 9
	"]"            reduce using rule 9
	","            reduce using rule 9
	%eof           reduce using rule 9


State 16

	Expr -> LetExpr .                                   (rule 10)

	";"            reduce using rule 10
	"in"           reduce using rule 10
	"then"         reduce using rule 10
	"else"         reduce using rule 10
	"of"           reduce using rule 10
	")"            reduce using rule 10
	"]"            reduce using rule 10
	","            reduce using rule 10
	%eof           reduce using rule 10


State 17

	Expr -> ExprOr .                                    (rule 11)

	";"            reduce using rule 11
	"in"           reduce using rule 11
	"then"         reduce using rule 11
	"else"         reduce using rule 11
	"of"           reduce using rule 11
	")"            reduce using rule 11
	"]"            reduce using rule 11
	","            reduce using rule 11
	%eof           reduce using rule 11


State 18

	ExprOr -> ExprAnd . OrRest                          (rule 23)

	";"            reduce using rule 24
	"in"           reduce using rule 24
	"then"         reduce using rule 24
	"else"         reduce using rule 24
	"of"           reduce using rule 24
	")"            reduce using rule 24
	"]"            reduce using rule 24
	","            reduce using rule 24
	"||"           shift, and enter state 80
	%eof           reduce using rule 24

	OrRest         goto state 79

State 19

	ExprAnd -> ExprEq . AndRest                         (rule 26)

	";"            reduce using rule 27
	"in"           reduce using rule 27
	"then"         reduce using rule 27
	"else"         reduce using rule 27
	"of"           reduce using rule 27
	")"            reduce using rule 27
	"]"            reduce using rule 27
	","            reduce using rule 27
	"&&"           shift, and enter state 78
	"||"           reduce using rule 27
	%eof           reduce using rule 27

	AndRest        goto state 77

State 20

	ExprEq -> ExprRel . EqRest                          (rule 29)

	";"            reduce using rule 30
	"in"           reduce using rule 30
	"then"         reduce using rule 30
	"else"         reduce using rule 30
	"of"           reduce using rule 30
	")"            reduce using rule 30
	"]"            reduce using rule 30
	","            reduce using rule 30
	"=="           shift, and enter state 75
	"/="           shift, and enter state 76
	"&&"           reduce using rule 30
	"||"           reduce using rule 30
	%eof           reduce using rule 30

	EqRest         goto state 73
	EqOp           goto state 74

State 21

	ExprRel -> ExprAdd . RelRest                        (rule 34)

	";"            reduce using rule 35
	"in"           reduce using rule 35
	"then"         reduce using rule 35
	"else"         reduce using rule 35
	"of"           reduce using rule 35
	")"            reduce using rule 35
	"]"            reduce using rule 35
	","            reduce using rule 35
	"=="           reduce using rule 35
	"/="           reduce using rule 35
	"<"            shift, and enter state 69
	"<="           shift, and enter state 70
	">"            shift, and enter state 71
	">="           shift, and enter state 72
	"&&"           reduce using rule 35
	"||"           reduce using rule 35
	%eof           reduce using rule 35

	RelRest        goto state 67
	RelOp          goto state 68

State 22

	ExprAdd -> ExprMul . AddRest                        (rule 41)

	";"            reduce using rule 42
	"in"           reduce using rule 42
	"then"         reduce using rule 42
	"else"         reduce using rule 42
	"of"           reduce using rule 42
	")"            reduce using rule 42
	"]"            reduce using rule 42
	","            reduce using rule 42
	"+"            shift, and enter state 65
	"-"            shift, and enter state 66
	"=="           reduce using rule 42
	"/="           reduce using rule 42
	"<"            reduce using rule 42
	"<="           reduce using rule 42
	">"            reduce using rule 42
	">="           reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42
	%eof           reduce using rule 42

	AddRest        goto state 63
	AddOp          goto state 64

State 23

	ExprMul -> ExprUnary . MulRest                      (rule 46)

	";"            reduce using rule 47
	"in"           reduce using rule 47
	"then"         reduce using rule 47
	"else"         reduce using rule 47
	"of"           reduce using rule 47
	")"            reduce using rule 47
	"]"            reduce using rule 47
	","            reduce using rule 47
	"+"            reduce using rule 47
	"-"            reduce using rule 47
	"*"            shift, and enter state 60
	"/"            shift, and enter state 61
	"%"            shift, and enter state 62
	"=="           reduce using rule 47
	"/="           reduce using rule 47
	"<"            reduce using rule 47
	"<="           reduce using rule 47
	">"            reduce using rule 47
	">="           reduce using rule 47
	"&&"           reduce using rule 47
	"||"           reduce using rule 47
	%eof           reduce using rule 47

	MulRest        goto state 58
	MulOp          goto state 59

State 24

	ExprUnary -> ExprApp .                              (rule 54)

	";"            reduce using rule 54
	"in"           reduce using rule 54
	"then"         reduce using rule 54
	"else"         reduce using rule 54
	"of"           reduce using rule 54
	")"            reduce using rule 54
	"]"            reduce using rule 54
	","            reduce using rule 54
	"+"            reduce using rule 54
	"-"            reduce using rule 54
	"*"            reduce using rule 54
	"/"            reduce using rule 54
	"%"            reduce using rule 54
	"=="           reduce using rule 54
	"/="           reduce using rule 54
	"<"            reduce using rule 54
	"<="           reduce using rule 54
	">"            reduce using rule 54
	">="           reduce using rule 54
	"&&"           reduce using rule 54
	"||"           reduce using rule 54
	%eof           reduce using rule 54


State 25

	ExprApp -> Atom . AppTail                           (rule 55)

	";"            reduce using rule 56
	"in"           reduce using rule 56
	"then"         reduce using rule 56
	"else"         reduce using rule 56
	"of"           reduce using rule 56
	"("            shift, and enter state 34
	")"            reduce using rule 56
	"["            shift, and enter state 35
	"]"            reduce using rule 56
	","            reduce using rule 56
	"+"            reduce using rule 56
	"-"            reduce using rule 56
	"*"            reduce using rule 56
	"/"            reduce using rule 56
	"%"            reduce using rule 56
	"=="           reduce using rule 56
	"/="           reduce using rule 56
	"<"            reduce using rule 56
	"<="           reduce using rule 56
	">"            reduce using rule 56
	">="           reduce using rule 56
	"&&"           reduce using rule 56
	"||"           reduce using rule 56
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43
	%eof           reduce using rule 56

	AppTail        goto state 56
	Atom           goto state 57
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 26

	Atom -> Literal .                                   (rule 58)

	";"            reduce using rule 58
	"in"           reduce using rule 58
	"then"         reduce using rule 58
	"else"         reduce using rule 58
	"of"           reduce using rule 58
	"("            reduce using rule 58
	")"            reduce using rule 58
	"["            reduce using rule 58
	"]"            reduce using rule 58
	","            reduce using rule 58
	"+"            reduce using rule 58
	"-"            reduce using rule 58
	"*"            reduce using rule 58
	"/"            reduce using rule 58
	"%"            reduce using rule 58
	"=="           reduce using rule 58
	"/="           reduce using rule 58
	"<"            reduce using rule 58
	"<="           reduce using rule 58
	">"            reduce using rule 58
	">="           reduce using rule 58
	"&&"           reduce using rule 58
	"||"           reduce using rule 58
	int            reduce using rule 58
	float          reduce using rule 58
	char           reduce using rule 58
	string         reduce using rule 58
	"True"         reduce using rule 58
	"False"        reduce using rule 58
	ident          reduce using rule 58
	%eof           reduce using rule 58


State 27

	Atom -> List .                                      (rule 61)

	";"            reduce using rule 61
	"in"           reduce using rule 61
	"then"         reduce using rule 61
	"else"         reduce using rule 61
	"of"           reduce using rule 61
	"("            reduce using rule 61
	")"            reduce using rule 61
	"["            reduce using rule 61
	"]"            reduce using rule 61
	","            reduce using rule 61
	"+"            reduce using rule 61
	"-"            reduce using rule 61
	"*"            reduce using rule 61
	"/"            reduce using rule 61
	"%"            reduce using rule 61
	"=="           reduce using rule 61
	"/="           reduce using rule 61
	"<"            reduce using rule 61
	"<="           reduce using rule 61
	">"            reduce using rule 61
	">="           reduce using rule 61
	"&&"           reduce using rule 61
	"||"           reduce using rule 61
	int            reduce using rule 61
	float          reduce using rule 61
	char           reduce using rule 61
	string         reduce using rule 61
	"True"         reduce using rule 61
	"False"        reduce using rule 61
	ident          reduce using rule 61
	%eof           reduce using rule 61


State 28

	Atom -> Tuple .                                     (rule 62)

	";"            reduce using rule 62
	"in"           reduce using rule 62
	"then"         reduce using rule 62
	"else"         reduce using rule 62
	"of"           reduce using rule 62
	"("            reduce using rule 62
	")"            reduce using rule 62
	"["            reduce using rule 62
	"]"            reduce using rule 62
	","            reduce using rule 62
	"+"            reduce using rule 62
	"-"            reduce using rule 62
	"*"            reduce using rule 62
	"/"            reduce using rule 62
	"%"            reduce using rule 62
	"=="           reduce using rule 62
	"/="           reduce using rule 62
	"<"            reduce using rule 62
	"<="           reduce using rule 62
	">"            reduce using rule 62
	">="           reduce using rule 62
	"&&"           reduce using rule 62
	"||"           reduce using rule 62
	int            reduce using rule 62
	float          reduce using rule 62
	char           reduce using rule 62
	string         reduce using rule 62
	"True"         reduce using rule 62
	"False"        reduce using rule 62
	ident          reduce using rule 62
	%eof           reduce using rule 62


State 29

	LetExpr -> "let" . DeclList "in" Expr               (rule 22)

	ident          shift, and enter state 4

	DeclList       goto state 55
	Decl           goto state 3

State 30

	IfExpr -> "if" . Expr "then" Expr "else" Expr       (rule 17)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 54
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 31

	CaseExpr -> "case" . Expr "of" Alts                 (rule 18)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 53
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 32

	ExprUnary -> "not" . ExprUnary                      (rule 52)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprUnary      goto state 52
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 33

	Lambda -> "\\" . LamParams "->" Expr                (rule 12)

	"->"           reduce using rule 5
	"("            shift, and enter state 51
	ident          shift, and enter state 7

	Params         goto state 49
	LamParams      goto state 50

State 34

	Atom -> "(" . Expr ")"                              (rule 60)
	Tuple -> "(" . Expr "," Expr TupleTail ")"          (rule 75)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 48
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 35

	List -> "[" . ExprListOpt "]"                       (rule 69)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"]"            reduce using rule 70
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 45
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	ExprListOpt    goto state 46
	ExprList       goto state 47
	Tuple          goto state 28

State 36

	ExprUnary -> "-" . ExprUnary                        (rule 53)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprUnary      goto state 44
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 37

	Literal -> int .                                    (rule 63)

	";"            reduce using rule 63
	"in"           reduce using rule 63
	"then"         reduce using rule 63
	"else"         reduce using rule 63
	"of"           reduce using rule 63
	"->"           reduce using rule 63
	"("            reduce using rule 63
	")"            reduce using rule 63
	"["            reduce using rule 63
	"]"            reduce using rule 63
	","            reduce using rule 63
	"+"            reduce using rule 63
	"-"            reduce using rule 63
	"*"            reduce using rule 63
	"/"            reduce using rule 63
	"%"            reduce using rule 63
	"=="           reduce using rule 63
	"/="           reduce using rule 63
	"<"            reduce using rule 63
	"<="           reduce using rule 63
	">"            reduce using rule 63
	">="           reduce using rule 63
	"&&"           reduce using rule 63
	"||"           reduce using rule 63
	int            reduce using rule 63
	float          reduce using rule 63
	char           reduce using rule 63
	string         reduce using rule 63
	"True"         reduce using rule 63
	"False"        reduce using rule 63
	ident          reduce using rule 63
	%eof           reduce using rule 63


State 38

	Literal -> float .                                  (rule 64)

	";"            reduce using rule 64
	"in"           reduce using rule 64
	"then"         reduce using rule 64
	"else"         reduce using rule 64
	"of"           reduce using rule 64
	"->"           reduce using rule 64
	"("            reduce using rule 64
	")"            reduce using rule 64
	"["            reduce using rule 64
	"]"            reduce using rule 64
	","            reduce using rule 64
	"+"            reduce using rule 64
	"-"            reduce using rule 64
	"*"            reduce using rule 64
	"/"            reduce using rule 64
	"%"            reduce using rule 64
	"=="           reduce using rule 64
	"/="           reduce using rule 64
	"<"            reduce using rule 64
	"<="           reduce using rule 64
	">"            reduce using rule 64
	">="           reduce using rule 64
	"&&"           reduce using rule 64
	"||"           reduce using rule 64
	int            reduce using rule 64
	float          reduce using rule 64
	char           reduce using rule 64
	string         reduce using rule 64
	"True"         reduce using rule 64
	"False"        reduce using rule 64
	ident          reduce using rule 64
	%eof           reduce using rule 64


State 39

	Literal -> char .                                   (rule 65)

	";"            reduce using rule 65
	"in"           reduce using rule 65
	"then"         reduce using rule 65
	"else"         reduce using rule 65
	"of"           reduce using rule 65
	"->"           reduce using rule 65
	"("            reduce using rule 65
	")"            reduce using rule 65
	"["            reduce using rule 65
	"]"            reduce using rule 65
	","            reduce using rule 65
	"+"            reduce using rule 65
	"-"            reduce using rule 65
	"*"            reduce using rule 65
	"/"            reduce using rule 65
	"%"            reduce using rule 65
	"=="           reduce using rule 65
	"/="           reduce using rule 65
	"<"            reduce using rule 65
	"<="           reduce using rule 65
	">"            reduce using rule 65
	">="           reduce using rule 65
	"&&"           reduce using rule 65
	"||"           reduce using rule 65
	int            reduce using rule 65
	float          reduce using rule 65
	char           reduce using rule 65
	string         reduce using rule 65
	"True"         reduce using rule 65
	"False"        reduce using rule 65
	ident          reduce using rule 65
	%eof           reduce using rule 65


State 40

	Literal -> string .                                 (rule 66)

	";"            reduce using rule 66
	"in"           reduce using rule 66
	"then"         reduce using rule 66
	"else"         reduce using rule 66
	"of"           reduce using rule 66
	"->"           reduce using rule 66
	"("            reduce using rule 66
	")"            reduce using rule 66
	"["            reduce using rule 66
	"]"            reduce using rule 66
	","            reduce using rule 66
	"+"            reduce using rule 66
	"-"            reduce using rule 66
	"*"            reduce using rule 66
	"/"            reduce using rule 66
	"%"            reduce using rule 66
	"=="           reduce using rule 66
	"/="           reduce using rule 66
	"<"            reduce using rule 66
	"<="           reduce using rule 66
	">"            reduce using rule 66
	">="           reduce using rule 66
	"&&"           reduce using rule 66
	"||"           reduce using rule 66
	int            reduce using rule 66
	float          reduce using rule 66
	char           reduce using rule 66
	string         reduce using rule 66
	"True"         reduce using rule 66
	"False"        reduce using rule 66
	ident          reduce using rule 66
	%eof           reduce using rule 66


State 41

	Literal -> "True" .                                 (rule 67)

	";"            reduce using rule 67
	"in"           reduce using rule 67
	"then"         reduce using rule 67
	"else"         reduce using rule 67
	"of"           reduce using rule 67
	"->"           reduce using rule 67
	"("            reduce using rule 67
	")"            reduce using rule 67
	"["            reduce using rule 67
	"]"            reduce using rule 67
	","            reduce using rule 67
	"+"            reduce using rule 67
	"-"            reduce using rule 67
	"*"            reduce using rule 67
	"/"            reduce using rule 67
	"%"            reduce using rule 67
	"=="           reduce using rule 67
	"/="           reduce using rule 67
	"<"            reduce using rule 67
	"<="           reduce using rule 67
	">"            reduce using rule 67
	">="           reduce using rule 67
	"&&"           reduce using rule 67
	"||"           reduce using rule 67
	int            reduce using rule 67
	float          reduce using rule 67
	char           reduce using rule 67
	string         reduce using rule 67
	"True"         reduce using rule 67
	"False"        reduce using rule 67
	ident          reduce using rule 67
	%eof           reduce using rule 67


State 42

	Literal -> "False" .                                (rule 68)

	";"            reduce using rule 68
	"in"           reduce using rule 68
	"then"         reduce using rule 68
	"else"         reduce using rule 68
	"of"           reduce using rule 68
	"->"           reduce using rule 68
	"("            reduce using rule 68
	")"            reduce using rule 68
	"["            reduce using rule 68
	"]"            reduce using rule 68
	","            reduce using rule 68
	"+"            reduce using rule 68
	"-"            reduce using rule 68
	"*"            reduce using rule 68
	"/"            reduce using rule 68
	"%"            reduce using rule 68
	"=="           reduce using rule 68
	"/="           reduce using rule 68
	"<"            reduce using rule 68
	"<="           reduce using rule 68
	">"            reduce using rule 68
	">="           reduce using rule 68
	"&&"           reduce using rule 68
	"||"           reduce using rule 68
	int            reduce using rule 68
	float          reduce using rule 68
	char           reduce using rule 68
	string         reduce using rule 68
	"True"         reduce using rule 68
	"False"        reduce using rule 68
	ident          reduce using rule 68
	%eof           reduce using rule 68


State 43

	Atom -> ident .                                     (rule 59)

	";"            reduce using rule 59
	"in"           reduce using rule 59
	"then"         reduce using rule 59
	"else"         reduce using rule 59
	"of"           reduce using rule 59
	"("            reduce using rule 59
	")"            reduce using rule 59
	"["            reduce using rule 59
	"]"            reduce using rule 59
	","            reduce using rule 59
	"+"            reduce using rule 59
	"-"            reduce using rule 59
	"*"            reduce using rule 59
	"/"            reduce using rule 59
	"%"            reduce using rule 59
	"=="           reduce using rule 59
	"/="           reduce using rule 59
	"<"            reduce using rule 59
	"<="           reduce using rule 59
	">"            reduce using rule 59
	">="           reduce using rule 59
	"&&"           reduce using rule 59
	"||"           reduce using rule 59
	int            reduce using rule 59
	float          reduce using rule 59
	char           reduce using rule 59
	string         reduce using rule 59
	"True"         reduce using rule 59
	"False"        reduce using rule 59
	ident          reduce using rule 59
	%eof           reduce using rule 59


State 44

	ExprUnary -> "-" ExprUnary .                        (rule 53)

	";"            reduce using rule 53
	"in"           reduce using rule 53
	"then"         reduce using rule 53
	"else"         reduce using rule 53
	"of"           reduce using rule 53
	")"            reduce using rule 53
	"]"            reduce using rule 53
	","            reduce using rule 53
	"+"            reduce using rule 53
	"-"            reduce using rule 53
	"*"            reduce using rule 53
	"/"            reduce using rule 53
	"%"            reduce using rule 53
	"=="           reduce using rule 53
	"/="           reduce using rule 53
	"<"            reduce using rule 53
	"<="           reduce using rule 53
	">"            reduce using rule 53
	">="           reduce using rule 53
	"&&"           reduce using rule 53
	"||"           reduce using rule 53
	%eof           reduce using rule 53


State 45

	ExprList -> Expr . ExprListTail                     (rule 72)

	"]"            reduce using rule 73
	","            shift, and enter state 98

	ExprListTail   goto state 97

State 46

	List -> "[" ExprListOpt . "]"                       (rule 69)

	"]"            shift, and enter state 96


State 47

	ExprListOpt -> ExprList .                           (rule 71)

	"]"            reduce using rule 71


State 48

	Atom -> "(" Expr . ")"                              (rule 60)
	Tuple -> "(" Expr . "," Expr TupleTail ")"          (rule 75)

	")"            shift, and enter state 94
	","            shift, and enter state 95


State 49

	LamParams -> Params .                               (rule 13)

	"->"           reduce using rule 13


State 50

	Lambda -> "\\" LamParams . "->" Expr                (rule 12)

	"->"           shift, and enter state 93


State 51

	LamParams -> "(" . IdentList ")"                    (rule 14)

	ident          shift, and enter state 92

	IdentList      goto state 91

State 52

	ExprUnary -> "not" ExprUnary .                      (rule 52)

	";"            reduce using rule 52
	"in"           reduce using rule 52
	"then"         reduce using rule 52
	"else"         reduce using rule 52
	"of"           reduce using rule 52
	")"            reduce using rule 52
	"]"            reduce using rule 52
	","            reduce using rule 52
	"+"            reduce using rule 52
	"-"            reduce using rule 52
	"*"            reduce using rule 52
	"/"            reduce using rule 52
	"%"            reduce using rule 52
	"=="           reduce using rule 52
	"/="           reduce using rule 52
	"<"            reduce using rule 52
	"<="           reduce using rule 52
	">"            reduce using rule 52
	">="           reduce using rule 52
	"&&"           reduce using rule 52
	"||"           reduce using rule 52
	%eof           reduce using rule 52


State 53

	CaseExpr -> "case" Expr . "of" Alts                 (rule 18)

	"of"           shift, and enter state 90


State 54

	IfExpr -> "if" Expr . "then" Expr "else" Expr       (rule 17)

	"then"         shift, and enter state 89


State 55

	LetExpr -> "let" DeclList . "in" Expr               (rule 22)

	"in"           shift, and enter state 88


State 56

	ExprApp -> Atom AppTail .                           (rule 55)

	";"            reduce using rule 55
	"in"           reduce using rule 55
	"then"         reduce using rule 55
	"else"         reduce using rule 55
	"of"           reduce using rule 55
	")"            reduce using rule 55
	"]"            reduce using rule 55
	","            reduce using rule 55
	"+"            reduce using rule 55
	"-"            reduce using rule 55
	"*"            reduce using rule 55
	"/"            reduce using rule 55
	"%"            reduce using rule 55
	"=="           reduce using rule 55
	"/="           reduce using rule 55
	"<"            reduce using rule 55
	"<="           reduce using rule 55
	">"            reduce using rule 55
	">="           reduce using rule 55
	"&&"           reduce using rule 55
	"||"           reduce using rule 55
	%eof           reduce using rule 55


State 57

	AppTail -> Atom . AppTail                           (rule 57)

	";"            reduce using rule 56
	"in"           reduce using rule 56
	"then"         reduce using rule 56
	"else"         reduce using rule 56
	"of"           reduce using rule 56
	"("            shift, and enter state 34
	")"            reduce using rule 56
	"["            shift, and enter state 35
	"]"            reduce using rule 56
	","            reduce using rule 56
	"+"            reduce using rule 56
	"-"            reduce using rule 56
	"*"            reduce using rule 56
	"/"            reduce using rule 56
	"%"            reduce using rule 56
	"=="           reduce using rule 56
	"/="           reduce using rule 56
	"<"            reduce using rule 56
	"<="           reduce using rule 56
	">"            reduce using rule 56
	">="           reduce using rule 56
	"&&"           reduce using rule 56
	"||"           reduce using rule 56
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43
	%eof           reduce using rule 56

	AppTail        goto state 87
	Atom           goto state 57
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 58

	ExprMul -> ExprUnary MulRest .                      (rule 46)

	";"            reduce using rule 46
	"in"           reduce using rule 46
	"then"         reduce using rule 46
	"else"         reduce using rule 46
	"of"           reduce using rule 46
	")"            reduce using rule 46
	"]"            reduce using rule 46
	","            reduce using rule 46
	"+"            reduce using rule 46
	"-"            reduce using rule 46
	"=="           reduce using rule 46
	"/="           reduce using rule 46
	"<"            reduce using rule 46
	"<="           reduce using rule 46
	">"            reduce using rule 46
	">="           reduce using rule 46
	"&&"           reduce using rule 46
	"||"           reduce using rule 46
	%eof           reduce using rule 46


State 59

	MulRest -> MulOp . ExprUnary MulRest                (rule 48)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprUnary      goto state 86
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 60

	MulOp -> "*" .                                      (rule 49)

	"not"          reduce using rule 49
	"("            reduce using rule 49
	"["            reduce using rule 49
	"-"            reduce using rule 49
	int            reduce using rule 49
	float          reduce using rule 49
	char           reduce using rule 49
	string         reduce using rule 49
	"True"         reduce using rule 49
	"False"        reduce using rule 49
	ident          reduce using rule 49


State 61

	MulOp -> "/" .                                      (rule 50)

	"not"          reduce using rule 50
	"("            reduce using rule 50
	"["            reduce using rule 50
	"-"            reduce using rule 50
	int            reduce using rule 50
	float          reduce using rule 50
	char           reduce using rule 50
	string         reduce using rule 50
	"True"         reduce using rule 50
	"False"        reduce using rule 50
	ident          reduce using rule 50


State 62

	MulOp -> "%" .                                      (rule 51)

	"not"          reduce using rule 51
	"("            reduce using rule 51
	"["            reduce using rule 51
	"-"            reduce using rule 51
	int            reduce using rule 51
	float          reduce using rule 51
	char           reduce using rule 51
	string         reduce using rule 51
	"True"         reduce using rule 51
	"False"        reduce using rule 51
	ident          reduce using rule 51


State 63

	ExprAdd -> ExprMul AddRest .                        (rule 41)

	";"            reduce using rule 41
	"in"           reduce using rule 41
	"then"         reduce using rule 41
	"else"         reduce using rule 41
	"of"           reduce using rule 41
	")"            reduce using rule 41
	"]"            reduce using rule 41
	","            reduce using rule 41
	"=="           reduce using rule 41
	"/="           reduce using rule 41
	"<"            reduce using rule 41
	"<="           reduce using rule 41
	">"            reduce using rule 41
	">="           reduce using rule 41
	"&&"           reduce using rule 41
	"||"           reduce using rule 41
	%eof           reduce using rule 41


State 64

	AddRest -> AddOp . ExprMul AddRest                  (rule 43)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprMul        goto state 85
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 65

	AddOp -> "+" .                                      (rule 44)

	"not"          reduce using rule 44
	"("            reduce using rule 44
	"["            reduce using rule 44
	"-"            reduce using rule 44
	int            reduce using rule 44
	float          reduce using rule 44
	char           reduce using rule 44
	string         reduce using rule 44
	"True"         reduce using rule 44
	"False"        reduce using rule 44
	ident          reduce using rule 44


State 66

	AddOp -> "-" .                                      (rule 45)

	"not"          reduce using rule 45
	"("            reduce using rule 45
	"["            reduce using rule 45
	"-"            reduce using rule 45
	int            reduce using rule 45
	float          reduce using rule 45
	char           reduce using rule 45
	string         reduce using rule 45
	"True"         reduce using rule 45
	"False"        reduce using rule 45
	ident          reduce using rule 45


State 67

	ExprRel -> ExprAdd RelRest .                        (rule 34)

	";"            reduce using rule 34
	"in"           reduce using rule 34
	"then"         reduce using rule 34
	"else"         reduce using rule 34
	"of"           reduce using rule 34
	")"            reduce using rule 34
	"]"            reduce using rule 34
	","            reduce using rule 34
	"=="           reduce using rule 34
	"/="           reduce using rule 34
	"&&"           reduce using rule 34
	"||"           reduce using rule 34
	%eof           reduce using rule 34


State 68

	RelRest -> RelOp . ExprAdd RelRest                  (rule 36)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprAdd        goto state 84
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 69

	RelOp -> "<" .                                      (rule 37)

	"not"          reduce using rule 37
	"("            reduce using rule 37
	"["            reduce using rule 37
	"-"            reduce using rule 37
	int            reduce using rule 37
	float          reduce using rule 37
	char           reduce using rule 37
	string         reduce using rule 37
	"True"         reduce using rule 37
	"False"        reduce using rule 37
	ident          reduce using rule 37


State 70

	RelOp -> "<=" .                                     (rule 38)

	"not"          reduce using rule 38
	"("            reduce using rule 38
	"["            reduce using rule 38
	"-"            reduce using rule 38
	int            reduce using rule 38
	float          reduce using rule 38
	char           reduce using rule 38
	string         reduce using rule 38
	"True"         reduce using rule 38
	"False"        reduce using rule 38
	ident          reduce using rule 38


State 71

	RelOp -> ">" .                                      (rule 39)

	"not"          reduce using rule 39
	"("            reduce using rule 39
	"["            reduce using rule 39
	"-"            reduce using rule 39
	int            reduce using rule 39
	float          reduce using rule 39
	char           reduce using rule 39
	string         reduce using rule 39
	"True"         reduce using rule 39
	"False"        reduce using rule 39
	ident          reduce using rule 39


State 72

	RelOp -> ">=" .                                     (rule 40)

	"not"          reduce using rule 40
	"("            reduce using rule 40
	"["            reduce using rule 40
	"-"            reduce using rule 40
	int            reduce using rule 40
	float          reduce using rule 40
	char           reduce using rule 40
	string         reduce using rule 40
	"True"         reduce using rule 40
	"False"        reduce using rule 40
	ident          reduce using rule 40


State 73

	ExprEq -> ExprRel EqRest .                          (rule 29)

	";"            reduce using rule 29
	"in"           reduce using rule 29
	"then"         reduce using rule 29
	"else"         reduce using rule 29
	"of"           reduce using rule 29
	")"            reduce using rule 29
	"]"            reduce using rule 29
	","            reduce using rule 29
	"&&"           reduce using rule 29
	"||"           reduce using rule 29
	%eof           reduce using rule 29


State 74

	EqRest -> EqOp . ExprRel EqRest                     (rule 31)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprRel        goto state 83
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 75

	EqOp -> "==" .                                      (rule 32)

	"not"          reduce using rule 32
	"("            reduce using rule 32
	"["            reduce using rule 32
	"-"            reduce using rule 32
	int            reduce using rule 32
	float          reduce using rule 32
	char           reduce using rule 32
	string         reduce using rule 32
	"True"         reduce using rule 32
	"False"        reduce using rule 32
	ident          reduce using rule 32


State 76

	EqOp -> "/=" .                                      (rule 33)

	"not"          reduce using rule 33
	"("            reduce using rule 33
	"["            reduce using rule 33
	"-"            reduce using rule 33
	int            reduce using rule 33
	float          reduce using rule 33
	char           reduce using rule 33
	string         reduce using rule 33
	"True"         reduce using rule 33
	"False"        reduce using rule 33
	ident          reduce using rule 33


State 77

	ExprAnd -> ExprEq AndRest .                         (rule 26)

	";"            reduce using rule 26
	"in"           reduce using rule 26
	"then"         reduce using rule 26
	"else"         reduce using rule 26
	"of"           reduce using rule 26
	")"            reduce using rule 26
	"]"            reduce using rule 26
	","            reduce using rule 26
	"||"           reduce using rule 26
	%eof           reduce using rule 26


State 78

	AndRest -> "&&" . ExprEq AndRest                    (rule 28)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprEq         goto state 82
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 79

	ExprOr -> ExprAnd OrRest .                          (rule 23)

	";"            reduce using rule 23
	"in"           reduce using rule 23
	"then"         reduce using rule 23
	"else"         reduce using rule 23
	"of"           reduce using rule 23
	")"            reduce using rule 23
	"]"            reduce using rule 23
	","            reduce using rule 23
	%eof           reduce using rule 23


State 80

	OrRest -> "||" . ExprAnd OrRest                     (rule 25)

	"not"          shift, and enter state 32
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	ExprAnd        goto state 81
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 81

	OrRest -> "||" ExprAnd . OrRest                     (rule 25)

	";"            reduce using rule 24
	"in"           reduce using rule 24
	"then"         reduce using rule 24
	"else"         reduce using rule 24
	"of"           reduce using rule 24
	")"            reduce using rule 24
	"]"            reduce using rule 24
	","            reduce using rule 24
	"||"           shift, and enter state 80
	%eof           reduce using rule 24

	OrRest         goto state 121

State 82

	AndRest -> "&&" ExprEq . AndRest                    (rule 28)

	";"            reduce using rule 27
	"in"           reduce using rule 27
	"then"         reduce using rule 27
	"else"         reduce using rule 27
	"of"           reduce using rule 27
	")"            reduce using rule 27
	"]"            reduce using rule 27
	","            reduce using rule 27
	"&&"           shift, and enter state 78
	"||"           reduce using rule 27
	%eof           reduce using rule 27

	AndRest        goto state 120

State 83

	EqRest -> EqOp ExprRel . EqRest                     (rule 31)

	";"            reduce using rule 30
	"in"           reduce using rule 30
	"then"         reduce using rule 30
	"else"         reduce using rule 30
	"of"           reduce using rule 30
	")"            reduce using rule 30
	"]"            reduce using rule 30
	","            reduce using rule 30
	"=="           shift, and enter state 75
	"/="           shift, and enter state 76
	"&&"           reduce using rule 30
	"||"           reduce using rule 30
	%eof           reduce using rule 30

	EqRest         goto state 119
	EqOp           goto state 74

State 84

	RelRest -> RelOp ExprAdd . RelRest                  (rule 36)

	";"            reduce using rule 35
	"in"           reduce using rule 35
	"then"         reduce using rule 35
	"else"         reduce using rule 35
	"of"           reduce using rule 35
	")"            reduce using rule 35
	"]"            reduce using rule 35
	","            reduce using rule 35
	"=="           reduce using rule 35
	"/="           reduce using rule 35
	"<"            shift, and enter state 69
	"<="           shift, and enter state 70
	">"            shift, and enter state 71
	">="           shift, and enter state 72
	"&&"           reduce using rule 35
	"||"           reduce using rule 35
	%eof           reduce using rule 35

	RelRest        goto state 118
	RelOp          goto state 68

State 85

	AddRest -> AddOp ExprMul . AddRest                  (rule 43)

	";"            reduce using rule 42
	"in"           reduce using rule 42
	"then"         reduce using rule 42
	"else"         reduce using rule 42
	"of"           reduce using rule 42
	")"            reduce using rule 42
	"]"            reduce using rule 42
	","            reduce using rule 42
	"+"            shift, and enter state 65
	"-"            shift, and enter state 66
	"=="           reduce using rule 42
	"/="           reduce using rule 42
	"<"            reduce using rule 42
	"<="           reduce using rule 42
	">"            reduce using rule 42
	">="           reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42
	%eof           reduce using rule 42

	AddRest        goto state 117
	AddOp          goto state 64

State 86

	MulRest -> MulOp ExprUnary . MulRest                (rule 48)

	";"            reduce using rule 47
	"in"           reduce using rule 47
	"then"         reduce using rule 47
	"else"         reduce using rule 47
	"of"           reduce using rule 47
	")"            reduce using rule 47
	"]"            reduce using rule 47
	","            reduce using rule 47
	"+"            reduce using rule 47
	"-"            reduce using rule 47
	"*"            shift, and enter state 60
	"/"            shift, and enter state 61
	"%"            shift, and enter state 62
	"=="           reduce using rule 47
	"/="           reduce using rule 47
	"<"            reduce using rule 47
	"<="           reduce using rule 47
	">"            reduce using rule 47
	">="           reduce using rule 47
	"&&"           reduce using rule 47
	"||"           reduce using rule 47
	%eof           reduce using rule 47

	MulRest        goto state 116
	MulOp          goto state 59

State 87

	AppTail -> Atom AppTail .                           (rule 57)

	";"            reduce using rule 57
	"in"           reduce using rule 57
	"then"         reduce using rule 57
	"else"         reduce using rule 57
	"of"           reduce using rule 57
	")"            reduce using rule 57
	"]"            reduce using rule 57
	","            reduce using rule 57
	"+"            reduce using rule 57
	"-"            reduce using rule 57
	"*"            reduce using rule 57
	"/"            reduce using rule 57
	"%"            reduce using rule 57
	"=="           reduce using rule 57
	"/="           reduce using rule 57
	"<"            reduce using rule 57
	"<="           reduce using rule 57
	">"            reduce using rule 57
	">="           reduce using rule 57
	"&&"           reduce using rule 57
	"||"           reduce using rule 57
	%eof           reduce using rule 57


State 88

	LetExpr -> "let" DeclList "in" . Expr               (rule 22)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 115
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 89

	IfExpr -> "if" Expr "then" . Expr "else" Expr       (rule 17)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 114
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 90

	CaseExpr -> "case" Expr "of" . Alts                 (rule 18)

	"_"            shift, and enter state 110
	"("            shift, and enter state 111
	"["            shift, and enter state 112
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 113

	Alts           goto state 104
	Alt            goto state 105
	Literal        goto state 106
	Pattern        goto state 107
	ListPattern    goto state 108
	TuplePattern   goto state 109

State 91

	LamParams -> "(" IdentList . ")"                    (rule 14)

	")"            shift, and enter state 103


State 92

	IdentList -> ident .                                (rule 15)
	IdentList -> ident . "," IdentList                  (rule 16)

	")"            reduce using rule 15
	","            shift, and enter state 102


State 93

	Lambda -> "\\" LamParams "->" . Expr                (rule 12)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 101
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 94

	Atom -> "(" Expr ")" .                              (rule 60)

	";"            reduce using rule 60
	"in"           reduce using rule 60
	"then"         reduce using rule 60
	"else"         reduce using rule 60
	"of"           reduce using rule 60
	"("            reduce using rule 60
	")"            reduce using rule 60
	"["            reduce using rule 60
	"]"            reduce using rule 60
	","            reduce using rule 60
	"+"            reduce using rule 60
	"-"            reduce using rule 60
	"*"            reduce using rule 60
	"/"            reduce using rule 60
	"%"            reduce using rule 60
	"=="           reduce using rule 60
	"/="           reduce using rule 60
	"<"            reduce using rule 60
	"<="           reduce using rule 60
	">"            reduce using rule 60
	">="           reduce using rule 60
	"&&"           reduce using rule 60
	"||"           reduce using rule 60
	int            reduce using rule 60
	float          reduce using rule 60
	char           reduce using rule 60
	string         reduce using rule 60
	"True"         reduce using rule 60
	"False"        reduce using rule 60
	ident          reduce using rule 60
	%eof           reduce using rule 60


State 95

	Tuple -> "(" Expr "," . Expr TupleTail ")"          (rule 75)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 100
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 96

	List -> "[" ExprListOpt "]" .                       (rule 69)

	";"            reduce using rule 69
	"in"           reduce using rule 69
	"then"         reduce using rule 69
	"else"         reduce using rule 69
	"of"           reduce using rule 69
	"("            reduce using rule 69
	")"            reduce using rule 69
	"["            reduce using rule 69
	"]"            reduce using rule 69
	","            reduce using rule 69
	"+"            reduce using rule 69
	"-"            reduce using rule 69
	"*"            reduce using rule 69
	"/"            reduce using rule 69
	"%"            reduce using rule 69
	"=="           reduce using rule 69
	"/="           reduce using rule 69
	"<"            reduce using rule 69
	"<="           reduce using rule 69
	">"            reduce using rule 69
	">="           reduce using rule 69
	"&&"           reduce using rule 69
	"||"           reduce using rule 69
	int            reduce using rule 69
	float          reduce using rule 69
	char           reduce using rule 69
	string         reduce using rule 69
	"True"         reduce using rule 69
	"False"        reduce using rule 69
	ident          reduce using rule 69
	%eof           reduce using rule 69


State 97

	ExprList -> Expr ExprListTail .                     (rule 72)

	"]"            reduce using rule 72


State 98

	ExprListTail -> "," . Expr ExprListTail             (rule 74)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 99
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 99

	ExprListTail -> "," Expr . ExprListTail             (rule 74)

	"]"            reduce using rule 73
	","            shift, and enter state 98

	ExprListTail   goto state 132

State 100

	Tuple -> "(" Expr "," Expr . TupleTail ")"          (rule 75)

	")"            reduce using rule 76
	","            shift, and enter state 131

	TupleTail      goto state 130

State 101

	Lambda -> "\\" LamParams "->" Expr .                (rule 12)

	";"            reduce using rule 12
	"in"           reduce using rule 12
	"then"         reduce using rule 12
	"else"         reduce using rule 12
	"of"           reduce using rule 12
	")"            reduce using rule 12
	"]"            reduce using rule 12
	","            reduce using rule 12
	%eof           reduce using rule 12


State 102

	IdentList -> ident "," . IdentList                  (rule 16)

	ident          shift, and enter state 92

	IdentList      goto state 129

State 103

	LamParams -> "(" IdentList ")" .                    (rule 14)

	"->"           reduce using rule 14


State 104

	CaseExpr -> "case" Expr "of" Alts .                 (rule 18)

	";"            reduce using rule 18
	"in"           reduce using rule 18
	"then"         reduce using rule 18
	"else"         reduce using rule 18
	"of"           reduce using rule 18
	")"            reduce using rule 18
	"]"            reduce using rule 18
	","            reduce using rule 18
	%eof           reduce using rule 18


State 105

	Alts -> Alt .                                       (rule 19)
	Alts -> Alt . ";" Alts                              (rule 20)

	";"            shift, and enter state 128
			(reduce using rule 19)

	"in"           reduce using rule 19
	"then"         reduce using rule 19
	"else"         reduce using rule 19
	"of"           reduce using rule 19
	")"            reduce using rule 19
	"]"            reduce using rule 19
	","            reduce using rule 19
	%eof           reduce using rule 19


State 106

	Pattern -> Literal .                                (rule 80)

	"->"           reduce using rule 80
	")"            reduce using rule 80
	"]"            reduce using rule 80
	","            reduce using rule 80


State 107

	Alt -> Pattern . "->" Expr                          (rule 21)

	"->"           shift, and enter state 127


State 108

	Pattern -> ListPattern .                            (rule 81)

	"->"           reduce using rule 81
	")"            reduce using rule 81
	"]"            reduce using rule 81
	","            reduce using rule 81


State 109

	Pattern -> TuplePattern .                           (rule 82)

	"->"           reduce using rule 82
	")"            reduce using rule 82
	"]"            reduce using rule 82
	","            reduce using rule 82


State 110

	Pattern -> "_" .                                    (rule 78)

	"->"           reduce using rule 78
	")"            reduce using rule 78
	"]"            reduce using rule 78
	","            reduce using rule 78


State 111

	TuplePattern -> "(" . Pattern PatternTupleTail ")"    (rule 89)

	"_"            shift, and enter state 110
	"("            shift, and enter state 111
	"["            shift, and enter state 112
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 113

	Literal        goto state 106
	Pattern        goto state 126
	ListPattern    goto state 108
	TuplePattern   goto state 109

State 112

	ListPattern -> "[" . PatternListOpt "]"             (rule 83)

	"_"            shift, and enter state 110
	"("            shift, and enter state 111
	"["            shift, and enter state 112
	"]"            reduce using rule 84
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 113

	Literal        goto state 106
	Pattern        goto state 123
	ListPattern    goto state 108
	PatternListOpt goto state 124
	PatternList    goto state 125
	TuplePattern   goto state 109

State 113

	Pattern -> ident .                                  (rule 79)

	"->"           reduce using rule 79
	")"            reduce using rule 79
	"]"            reduce using rule 79
	","            reduce using rule 79


State 114

	IfExpr -> "if" Expr "then" Expr . "else" Expr       (rule 17)

	"else"         shift, and enter state 122


State 115

	LetExpr -> "let" DeclList "in" Expr .               (rule 22)

	";"            reduce using rule 22
	"in"           reduce using rule 22
	"then"         reduce using rule 22
	"else"         reduce using rule 22
	"of"           reduce using rule 22
	")"            reduce using rule 22
	"]"            reduce using rule 22
	","            reduce using rule 22
	%eof           reduce using rule 22


State 116

	MulRest -> MulOp ExprUnary MulRest .                (rule 48)

	";"            reduce using rule 48
	"in"           reduce using rule 48
	"then"         reduce using rule 48
	"else"         reduce using rule 48
	"of"           reduce using rule 48
	")"            reduce using rule 48
	"]"            reduce using rule 48
	","            reduce using rule 48
	"+"            reduce using rule 48
	"-"            reduce using rule 48
	"=="           reduce using rule 48
	"/="           reduce using rule 48
	"<"            reduce using rule 48
	"<="           reduce using rule 48
	">"            reduce using rule 48
	">="           reduce using rule 48
	"&&"           reduce using rule 48
	"||"           reduce using rule 48
	%eof           reduce using rule 48


State 117

	AddRest -> AddOp ExprMul AddRest .                  (rule 43)

	";"            reduce using rule 43
	"in"           reduce using rule 43
	"then"         reduce using rule 43
	"else"         reduce using rule 43
	"of"           reduce using rule 43
	")"            reduce using rule 43
	"]"            reduce using rule 43
	","            reduce using rule 43
	"=="           reduce using rule 43
	"/="           reduce using rule 43
	"<"            reduce using rule 43
	"<="           reduce using rule 43
	">"            reduce using rule 43
	">="           reduce using rule 43
	"&&"           reduce using rule 43
	"||"           reduce using rule 43
	%eof           reduce using rule 43


State 118

	RelRest -> RelOp ExprAdd RelRest .                  (rule 36)

	";"            reduce using rule 36
	"in"           reduce using rule 36
	"then"         reduce using rule 36
	"else"         reduce using rule 36
	"of"           reduce using rule 36
	")"            reduce using rule 36
	"]"            reduce using rule 36
	","            reduce using rule 36
	"=="           reduce using rule 36
	"/="           reduce using rule 36
	"&&"           reduce using rule 36
	"||"           reduce using rule 36
	%eof           reduce using rule 36


State 119

	EqRest -> EqOp ExprRel EqRest .                     (rule 31)

	";"            reduce using rule 31
	"in"           reduce using rule 31
	"then"         reduce using rule 31
	"else"         reduce using rule 31
	"of"           reduce using rule 31
	")"            reduce using rule 31
	"]"            reduce using rule 31
	","            reduce using rule 31
	"&&"           reduce using rule 31
	"||"           reduce using rule 31
	%eof           reduce using rule 31


State 120

	AndRest -> "&&" ExprEq AndRest .                    (rule 28)

	";"            reduce using rule 28
	"in"           reduce using rule 28
	"then"         reduce using rule 28
	"else"         reduce using rule 28
	"of"           reduce using rule 28
	")"            reduce using rule 28
	"]"            reduce using rule 28
	","            reduce using rule 28
	"||"           reduce using rule 28
	%eof           reduce using rule 28


State 121

	OrRest -> "||" ExprAnd OrRest .                     (rule 25)

	";"            reduce using rule 25
	"in"           reduce using rule 25
	"then"         reduce using rule 25
	"else"         reduce using rule 25
	"of"           reduce using rule 25
	")"            reduce using rule 25
	"]"            reduce using rule 25
	","            reduce using rule 25
	%eof           reduce using rule 25


State 122

	IfExpr -> "if" Expr "then" Expr "else" . Expr       (rule 17)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 142
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 123

	PatternList -> Pattern . PatternListTail            (rule 86)

	"]"            reduce using rule 87
	","            shift, and enter state 141

	PatternListTailgoto state 140

State 124

	ListPattern -> "[" PatternListOpt . "]"             (rule 83)

	"]"            shift, and enter state 139


State 125

	PatternListOpt -> PatternList .                     (rule 85)

	"]"            reduce using rule 85


State 126

	TuplePattern -> "(" Pattern . PatternTupleTail ")"    (rule 89)

	")"            reduce using rule 90
	","            shift, and enter state 138

	PatternTupleTailgoto state 137

State 127

	Alt -> Pattern "->" . Expr                          (rule 21)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 136
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 128

	Alts -> Alt ";" . Alts                              (rule 20)

	"_"            shift, and enter state 110
	"("            shift, and enter state 111
	"["            shift, and enter state 112
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 113

	Alts           goto state 135
	Alt            goto state 105
	Literal        goto state 106
	Pattern        goto state 107
	ListPattern    goto state 108
	TuplePattern   goto state 109

State 129

	IdentList -> ident "," IdentList .                  (rule 16)

	")"            reduce using rule 16


State 130

	Tuple -> "(" Expr "," Expr TupleTail . ")"          (rule 75)

	")"            shift, and enter state 134


State 131

	TupleTail -> "," . Expr TupleTail                   (rule 77)

	"let"          shift, and enter state 29
	"if"           shift, and enter state 30
	"case"         shift, and enter state 31
	"not"          shift, and enter state 32
	"\\"           shift, and enter state 33
	"("            shift, and enter state 34
	"["            shift, and enter state 35
	"-"            shift, and enter state 36
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 43

	Expr           goto state 133
	Lambda         goto state 13
	IfExpr         goto state 14
	CaseExpr       goto state 15
	LetExpr        goto state 16
	ExprOr         goto state 17
	ExprAnd        goto state 18
	ExprEq         goto state 19
	ExprRel        goto state 20
	ExprAdd        goto state 21
	ExprMul        goto state 22
	ExprUnary      goto state 23
	ExprApp        goto state 24
	Atom           goto state 25
	Literal        goto state 26
	List           goto state 27
	Tuple          goto state 28

State 132

	ExprListTail -> "," Expr ExprListTail .             (rule 74)

	"]"            reduce using rule 74


State 133

	TupleTail -> "," Expr . TupleTail                   (rule 77)

	")"            reduce using rule 76
	","            shift, and enter state 131

	TupleTail      goto state 146

State 134

	Tuple -> "(" Expr "," Expr TupleTail ")" .          (rule 75)

	";"            reduce using rule 75
	"in"           reduce using rule 75
	"then"         reduce using rule 75
	"else"         reduce using rule 75
	"of"           reduce using rule 75
	"("            reduce using rule 75
	")"            reduce using rule 75
	"["            reduce using rule 75
	"]"            reduce using rule 75
	","            reduce using rule 75
	"+"            reduce using rule 75
	"-"            reduce using rule 75
	"*"            reduce using rule 75
	"/"            reduce using rule 75
	"%"            reduce using rule 75
	"=="           reduce using rule 75
	"/="           reduce using rule 75
	"<"            reduce using rule 75
	"<="           reduce using rule 75
	">"            reduce using rule 75
	">="           reduce using rule 75
	"&&"           reduce using rule 75
	"||"           reduce using rule 75
	int            reduce using rule 75
	float          reduce using rule 75
	char           reduce using rule 75
	string         reduce using rule 75
	"True"         reduce using rule 75
	"False"        reduce using rule 75
	ident          reduce using rule 75
	%eof           reduce using rule 75


State 135

	Alts -> Alt ";" Alts .                              (rule 20)

	";"            reduce using rule 20
	"in"           reduce using rule 20
	"then"         reduce using rule 20
	"else"         reduce using rule 20
	"of"           reduce using rule 20
	")"            reduce using rule 20
	"]"            reduce using rule 20
	","            reduce using rule 20
	%eof           reduce using rule 20


State 136

	Alt -> Pattern "->" Expr .                          (rule 21)

	";"            reduce using rule 21
	"in"           reduce using rule 21
	"then"         reduce using rule 21
	"else"         reduce using rule 21
	"of"           reduce using rule 21
	")"            reduce using rule 21
	"]"            reduce using rule 21
	","            reduce using rule 21
	%eof           reduce using rule 21


State 137

	TuplePattern -> "(" Pattern PatternTupleTail . ")"    (rule 89)

	")"            shift, and enter state 145


State 138

	PatternTupleTail -> "," . Pattern PatternTupleTail    (rule 91)

	"_"            shift, and enter state 110
	"("            shift, and enter state 111
	"["            shift, and enter state 112
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 113

	Literal        goto state 106
	Pattern        goto state 144
	ListPattern    goto state 108
	TuplePattern   goto state 109

State 139

	ListPattern -> "[" PatternListOpt "]" .             (rule 83)

	"->"           reduce using rule 83
	")"            reduce using rule 83
	"]"            reduce using rule 83
	","            reduce using rule 83


State 140

	PatternList -> Pattern PatternListTail .            (rule 86)

	"]"            reduce using rule 86


State 141

	PatternListTail -> "," . Pattern PatternListTail    (rule 88)

	"_"            shift, and enter state 110
	"("            shift, and enter state 111
	"["            shift, and enter state 112
	int            shift, and enter state 37
	float          shift, and enter state 38
	char           shift, and enter state 39
	string         shift, and enter state 40
	"True"         shift, and enter state 41
	"False"        shift, and enter state 42
	ident          shift, and enter state 113

	Literal        goto state 106
	Pattern        goto state 143
	ListPattern    goto state 108
	TuplePattern   goto state 109

State 142

	IfExpr -> "if" Expr "then" Expr "else" Expr .       (rule 17)

	";"            reduce using rule 17
	"in"           reduce using rule 17
	"then"         reduce using rule 17
	"else"         reduce using rule 17
	"of"           reduce using rule 17
	")"            reduce using rule 17
	"]"            reduce using rule 17
	","            reduce using rule 17
	%eof           reduce using rule 17


State 143

	PatternListTail -> "," Pattern . PatternListTail    (rule 88)

	"]"            reduce using rule 87
	","            shift, and enter state 141

	PatternListTailgoto state 148

State 144

	PatternTupleTail -> "," Pattern . PatternTupleTail    (rule 91)

	")"            reduce using rule 90
	","            shift, and enter state 138

	PatternTupleTailgoto state 147

State 145

	TuplePattern -> "(" Pattern PatternTupleTail ")" .    (rule 89)

	"->"           reduce using rule 89
	")"            reduce using rule 89
	"]"            reduce using rule 89
	","            reduce using rule 89


State 146

	TupleTail -> "," Expr TupleTail .                   (rule 77)

	")"            reduce using rule 77


State 147

	PatternTupleTail -> "," Pattern PatternTupleTail .    (rule 91)

	")"            reduce using rule 91


State 148

	PatternListTail -> "," Pattern PatternListTail .    (rule 88)

	"]"            reduce using rule 88


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 92
Number of terminals: 38
Number of non-terminals: 48
Number of states: 149
